openapi: 3.0.3
info:
  title: Swagger Togther we go - OpenAPI 3.0
  contact:
    email: skill1sp2@gmail.com
  version: 1.0.0
servers:
  - url: https://togerther-we-go-api.onrender.com/api
  - url: http://localhost:8080/api
tags:
  - name: auth
  - name: apply
    description: User apply to poster
  - name: booking
  - name: chat_room
  - name: message
  - name: review
  - name: user
paths:
  /auth/register:
    post:
      tags:
        - auth
      description: Create account
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                last_name:
                  type: string
                email:
                  type: string
                password:
                  type: string
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'          
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
        '405':
          description: Validation exception
        '500':
          description: Server internal error
  /auth/login:
    post:
      tags:
        - auth
      description: user login
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  accsess_token:
                    type: string
                  refresh_token:
                    type: string          
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
        '405':
          description: Validation exception
        '500':
          description: Server internal error
  /auth/loginWithGoogle:
    post:
      tags:
        - auth
      description: user login
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
                avatar:
                  type: string
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  accsess_token:
                    type: string
                  refresh_token:
                    type: string          
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
        '405':
          description: Validation exception
        '500':
          description: Server internal error
  /auth/resetPassword:
    post:
      tags:
        - auth
      description: user refresh access token
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                    type: string
                password:
                    type: string
                new_password:
                    type: string
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  accsess_token:
                    type: string      
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
        '405':
          description: Validation exception
        '500':
          description: Server internal error
  /auth/refresh:
    post:
      tags:
        - auth
      description: user refresh access token
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                refresh_token:
                    type: string
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  accsess_token:
                    type: string      
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
        '405':
          description: Validation exception
        '500':
          description: Server internal error
components:
  schemas:
    Apply:
      type: object
      properties:
        id:
          type: string
          description: objectId
          example: "string"
        deal_price:
          type: integer
          format: int64
          example: 198772
        booking:
          type: string
          description: objectId
          example: "string"
        state:
          type: string
          default: 'waiting'
          enum:
            - 'waiting'
            - 'accepted'
            - 'starting'
            - 'refuse'
        createdAt:
          type: string
          example: "string"
        updatedAt:
          type: string
          example: "string"
      xml:
        name: apply
    Booking:
      type: object
      properties:
        id:
          type: string
          description: objectId
          example: "string"
        authorId:
          type: string
          description: objectId
          example: "string"
        status:
          type: string
          example: "string"
        price:
          type: integer
          format: int64
          example: 198772
        bookingType:
          type: string
          example: "string"
        time:
          type: string
          example: "string"
        startPointLat:
          type: string
          example: "string"
        startPointLong:
          type: string
          example: "string"
        startPointId:
          type: string
          example: "string"
        startPointMainText:
          type: string
          example: "string"
        startPointAddress:
          type: string
          example: "string"
        endPointLat:
          type: string
          example: "string"
        endPointLong:
          type: string
          example: "string"
        endPointId:
          type: string
          example: "string"
        endPointMainText:
          type: string
          example: "string"
        endPointAddress:
          type: string
          example: "string"
        distance:
          type: string
          example: "string"
        duration:
          type: string
          example: "string"
        createdAt:
          type: string
          example: "string"
        updatedAt:
          type: string
          example: "string"
      xml:
        name: booking
    Chat_room:
      type: object
      properties:
        id:
          type: string
          description: objectId
          example: "string"
        userId_1:
          type: string
          description: objectId
          example: "string"
        user1:
          type: string
          description: objectId
          example: "string"
        userId_2:
          type: string
          description: objectId
          example: "string"
        user2:
          type: string
          description: objectId
          example: "string"
        num_unwatched_1:
          type: integer
          format: int64
          example: 198772
        num_unwatched_2:
          type: integer
          format: int64
          example: 198772
        lastMessage:
          type: string
          description: objectId
          example: "string"
        createdAt:
          type: string
          example: "string"
        updatedAt:
          type: string
          example: "string"
      xml:
        name: chat_room
    Message:
      type: object
      properties:
        id:
          type: string
          description: objectId
          example: "string"
        chatRoomId:
          type: string
          description: objectId
          example: "string"
        userId:
          type: string
          description: objectId
          example: "string"
        message:
          type: string
          example: "string"
        type:
          type: string
          default: 'text'
          enum:
            - 'text'
            - 'image'
        createdAt:
          type: string
          example: "string"
        updatedAt:
          type: string
          example: "string"
      xml:
        name: message
    Review:
      type: object
      properties:
        id:
          type: string
          description: objectId
          example: "string"
        creater:
          type: string
          description: objectId
          example: "string"
        receiver:
          type: string
          description: objectId
          example: "string"
        apply:
          type: string
          description: objectId
          example: "string"
        review_star:
          type: integer
          format: int64
          example: 198772
        review_note:
          type: string
          example: "string"
        createdAt:
          type: string
          example: "string"
        updatedAt:
          type: string
          example: "string"
      xml:
        name: review
    User:
      type: object
      properties:
        id:
          type: string
          description: objectId
          example: "string"
        first_name:
          type: string
          example: "string"
        last_name:
          type: string
          example: "string"
        email:
          type: string
          example: "string"
        password:
          type: string
          example: "string"
        avatarUrl:
          type: string
          example: "string"
        phoneNumber:
          type: string
          example: "string"
        time:
          type: string
          example: "string"
        birth_date:
          type: string
          example: "string"
        gender:
          type: string
          example: "string"
          default: 'male'
          enum:
            - 'male'
            - 'female'
        createdAt:
          type: string
          example: "string"
        updatedAt:
          type: string
          example: "string"
      xml:
        name: user
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
      xml:
        name: '##default'
  securitySchemes:
    api_key:
      type: apiKey
      name: api_key
      in: header